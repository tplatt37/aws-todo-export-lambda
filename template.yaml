AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Todo Export Lambda Function - Exports DynamoDB todo items to CSV via SQS trigger'

Parameters:
  SQSQueueArn:
    Type: String
    Description: ARN of the existing SQS queue that will trigger the Lambda function
    
  S3BucketName:
    Type: String
    Description: Name of the existing S3 bucket where CSV exports will be stored
    
  SNSTopicArn:
    Type: String
    Description: ARN of the existing SNS topic for export notifications
    
  DynamoDBTableName:
    Type: String
    Default: TodoItems-dev
    Description: Name of the DynamoDB table containing todo items

Globals:
  Function:
    Timeout: 120 
    MemorySize: 512
    Runtime: nodejs22.x
    Architectures:
      - x86_64

Resources:
  TodoExportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/
      Handler: handler.handler
      Description: Lambda function to export DynamoDB todo items to CSV
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
          S3_BUCKET_NAME: !Ref S3BucketName
          SNS_TOPIC_ARN: !Ref SNSTopicArn
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !Ref SQSQueueArn
            BatchSize: 1
            MaximumBatchingWindowInSeconds: 0
      Role: !GetAtt TodoExportLambdaRole.Arn

  TodoExportLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: TodoExportPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # SQS permissions
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !Ref SQSQueueArn
              
              # DynamoDB permissions
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTableName}'
              
              # S3 permissions
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'
              
              # SNS permissions
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref SNSTopicArn

Outputs:
  TodoExportFunction:
    Description: Todo Export Lambda Function ARN
    Value: !GetAtt TodoExportFunction.Arn
    
  TodoExportFunctionRole:
    Description: IAM Role created for Todo Export function
    Value: !GetAtt TodoExportLambdaRole.Arn
    
  TodoExportFunctionName:
    Description: Todo Export Lambda Function Name
    Value: !Ref TodoExportFunction
